/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as TwelvelabsApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { VideoItem } from "../../../../../types/VideoItem";
import { VideoItemFailed } from "../../../../../types/VideoItemFailed";

export const TransfersGetStatusResponse: core.serialization.ObjectSchema<
    serializers.tasks.TransfersGetStatusResponse.Raw,
    TwelvelabsApi.tasks.TransfersGetStatusResponse
> = core.serialization.object({
    notImported: core.serialization.property(
        "not_imported",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    validating: core.serialization.list(VideoItem).optional(),
    pending: core.serialization.list(VideoItem).optional(),
    queued: core.serialization.list(VideoItem).optional(),
    indexing: core.serialization.list(VideoItem).optional(),
    ready: core.serialization.list(VideoItem).optional(),
    failed: core.serialization.list(VideoItemFailed).optional(),
});

export declare namespace TransfersGetStatusResponse {
    export interface Raw {
        not_imported?: string[] | null;
        validating?: VideoItem.Raw[] | null;
        pending?: VideoItem.Raw[] | null;
        queued?: VideoItem.Raw[] | null;
        indexing?: VideoItem.Raw[] | null;
        ready?: VideoItem.Raw[] | null;
        failed?: VideoItemFailed.Raw[] | null;
    }
}
