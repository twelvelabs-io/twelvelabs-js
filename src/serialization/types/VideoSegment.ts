/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as TwelvelabsApi from "../../api/index";
import * as core from "../../core";
import { AudioSegment } from "./AudioSegment";

export const VideoSegment: core.serialization.ObjectSchema<serializers.VideoSegment.Raw, TwelvelabsApi.VideoSegment> =
    core.serialization
        .object({
            endOffsetSec: core.serialization.property("end_offset_sec", core.serialization.number().optional()),
            embeddingOption: core.serialization.property("embedding_option", core.serialization.string().optional()),
            embeddingScope: core.serialization.property("embedding_scope", core.serialization.string().optional()),
        })
        .extend(AudioSegment);

export declare namespace VideoSegment {
    export interface Raw extends AudioSegment.Raw {
        end_offset_sec?: number | null;
        embedding_option?: string | null;
        embedding_scope?: string | null;
    }
}
